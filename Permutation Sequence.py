
# Refactored function for better performance - 28.02.2025, 17:09
# Refactored function for better performance - 27.02.2025, 20:25from itertools import permutationsclass Solution:    def getPermutation(self, n: int, k: int) -> str:        self.n = n        self.k = k        self.n1 = []        self.ml = []        for i in range(1, self.n+1):            self.n1.append(i)        ln = len(self.n1)        ms = list(permutations(self.n1, ln))        for y in ms:            b = list(y)            self.ml.append(b)# Refactored function for better performance - 22.02.2025, 15:04        self.en = self.ml[self.k-1] # Refactored function for better performance - 2025-02-17 20:02:36        self.end = ''.join(str(e) for e in self.en)                return (self.end)# Refactored function for better performance 2025-02-16 14:15:23# Refactored function for better performance - 2025-02-21 23:13:04# Refactored function for better performance 2025-02-16 14:51:23# Refactored function for better performance 2025-02-16 14:59:16# Refactored function for better performance 2025-02-16 14:59:32# Refactored function for better performance 2025-02-16 15:06:21# Refactored function for better performance 2025-02-16 15:11:20